{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useEffect","obterClima","useState","clima","setClima","a","fetch","then","response","json","data","results","catch","error","console","previsao","forecast","map","item","date","weekday","max","min","description","city","temp","humidity","wind_speedy","border","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uOAGe,SAASA,IACvBC,qBAAU,YADmB,mCAE5BC,KACE,IAH0B,MAKHC,mBAAS,IALN,mBAKtBC,EALsB,KAKfC,EALe,iDAO7B,sBAAAC,EAAA,4DACW,iEADX,SAEOC,MADI,kEAERC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAELN,EAASM,EAAKC,YAEdC,OAAM,SAAUC,GAChBC,QAAQD,MAAR,yBAAgCA,OATnC,4CAP6B,sBAoB7B,IAAIE,EAAW,GAef,OAZIZ,EAAMa,WACTD,EAAWZ,EAAMa,SAASC,KAAI,SAAAC,GAAI,OACjC,+BACC,6BAAKA,EAAKC,OACV,6BAAKD,EAAKE,UACV,+BAAKF,EAAKG,IAAV,WACA,+BAAKH,EAAKI,IAAV,WACA,6BAAKJ,EAAKK,gBALFL,EAAKC,UAWf,gCACC,2CAAchB,EAAMqB,KAApB,OACA,+CAAkBrB,EAAMsB,KAAxB,WACA,mDAAgBtB,EAAMoB,eACtB,iDAAoBpB,EAAMuB,SAA1B,OACA,uDAA0BvB,EAAMwB,eAChC,wDACA,wBAAOC,OAAO,IAAd,UACC,gCACC,+BACC,sCACA,+CACA,2CACA,2CACA,sDAGF,gCACEb,UCzDN,IAYec,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBxB,MAAK,YAAkD,IAA/CyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.5ab80f74.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport './App.css'\n\nexport default function App() {\n\tuseEffect(() => {\n\t\tobterClima()\n\t}, [])\n\n\tconst [clima, setClima] = useState({})\n\n\tasync function obterClima() {\n\t\tlet url = 'https://api.hgbrasil.com/weather?format=json-cors&woeid=455963'\n\t\tawait fetch(url)\n\t\t\t.then(response => response.json())\n\t\t\t.then(data => {\n\t\t\t\t// console.log(data.results)\n\t\t\t\tsetClima(data.results)\n\t\t\t})\n\t\t\t.catch(function (error) {\n\t\t\t\tconsole.error(`Houve um erro: ${error}`)\n\t\t\t})\n\t}\n\n\tlet previsao = []\n\n\t// se as informaçoes da api não forem carregadas, não tenta fazer a previsao\n\tif (clima.forecast) {\n\t\tprevisao = clima.forecast.map(item => (\n\t\t\t<tr key={item.date}>\n\t\t\t\t<td>{item.date}</td>\n\t\t\t\t<td>{item.weekday}</td>\n\t\t\t\t<td>{item.max}°C</td>\n\t\t\t\t<td>{item.min}°C</td>\n\t\t\t\t<td>{item.description}</td>\n\t\t\t</tr>\n\t\t))\n\t}\n\n\treturn (\n\t\t<div>\n\t\t\t<h1>Clima em {clima.city}:</h1>\n\t\t\t<h3>Temperatura: {clima.temp}°C</h3>\n\t\t\t<h3>Descrição: {clima.description}</h3>\n\t\t\t<h3>Umidade do ar: {clima.humidity}%</h3>\n\t\t\t<h3>Velocidade do vento: {clima.wind_speedy}</h3>\n\t\t\t<h1>Previsão da Semana:</h1>\n\t\t\t<table border=\"2\">\n\t\t\t\t<thead>\n\t\t\t\t\t<tr>\n\t\t\t\t\t\t<th>Data</th>\n\t\t\t\t\t\t<th>Dia da Semana</th>\n\t\t\t\t\t\t<th>Máxima</th>\n\t\t\t\t\t\t<th>Mínima</th>\n\t\t\t\t\t\t<th>Descrição</th>\n\t\t\t\t\t</tr>\n\t\t\t\t</thead>\n\t\t\t\t<tbody>\n\t\t\t\t\t{previsao}\n\t\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t)\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}